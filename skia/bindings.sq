(type Scalar SkScalar)
(type Paint SkPaint)
(type Rect SkRect)
(type Colour4f SkColor4f)
(type ColourSpace SkColorSpace)
(type Colour u32)
(type Paint/Mode SkPaint::Style)

(class Paint
  (:init [])
  (:deinit [])
  (:new [])
  ; (new-clone)
  (reset [])
  (anti-alias? [> bool])
  (set-anti-alias [bool])
  (dither? [> bool])
  (set-dither [bool])
  (get-mode [> Paint/Mode] getStyle)
  (set-mode [Paint/Mode] setStyle)
  (set-stroke [bool])
  (get-colour [> Colour] getColor)
  (get-colour4f [> Colour4f] getColor4f)
  (set-colour [Colour] setColor)
  (set-colour4f [Colour4f *ColourSpace] setColor4f)
  )

(type Canvas SkCanvas)
(class Surface
  (get-canvas [> *Canvas])
  (flush [])
  ; :static
  ; (make-raster-direct [])
  )

(class Canvas
  (clear [Colour])
  (draw-circle [Scalar Scalar Scalar &Paint])
  (draw-rect [&Rect &Paint]))

(struct ImageInfo
  (:init [])
  (width [> int])
  (height [> int])
  :static
  ;; Open question: how to handle reference counting
  ;; keep the refcounted stuff hidden within the C++ side?
  #_(make [int int ColourType AlphaType]))

(class RefCnt
  (ref [])
  (unref []))